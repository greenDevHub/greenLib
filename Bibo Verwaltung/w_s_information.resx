<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>